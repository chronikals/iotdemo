#!/usr/bin/env node
'use strict';

var fs = require('fs');
var aseUtil = require('../lib');
var _ = require('lodash');
var read = aseUtil.read;
var formatAsLess = aseUtil.formatAsLess;
var formatAsColorsObject = aseUtil.formatAsColorsObject;

var argv = require('yargs')
  .usage('Dumps the colors and groups of an .ase file as JSON.\n\nUsage: $0 [options] filename.ase')
  .demand(1)
  .options({
    pretty: {
      default: false,
      describe: 'Pretty print the output',
      type: 'boolean'
    },
    f: {
      alias: 'format',
      default: 'json',
      describe: 'Output format: json, json-colors, less',
      type: 'string'
    },
    export: {
      default: false,
      describe: 'When using JSON output it adds the CommonJS module.exports',
      type: 'boolean'
    },
    cc: {
      alias: 'camelCase',
      default: false,
      describe: 'Uses camelCase names on json-colors or less formats',
      type: 'boolean'
    }
  })
  .check(function (args) {
    var fmt = args.format.toLowerCase();
    if (fmt !== 'json' && fmt !== 'less' && fmt !== 'json-colors') {
      throw new Error('Unsupported output format "' + fmt + '". Supported output formats: json, json-colors, less');
    }
    return true;
  })
  .argv;

var result = read(fs.readFileSync(argv._[0]));
var fmt = argv.format.toLowerCase();
var nameFormat = (argv.camelCase) ? _.camelCase : _.kebabCase;

function jsonOutput(obj, pretty, exports) {
  if (exports) process.stdout.write('module.exports = ');
  process.stdout.write(JSON.stringify(obj, null, pretty ? '  ' : null));
  if (exports) process.stdout.write(';');
}

if (fmt === 'json') {
  jsonOutput(result, argv.pretty, argv.export);
} else if (fmt === 'less') {
  process.stdout.write(formatAsLess(result, nameFormat));
} else if (fmt === 'json-colors') {
  jsonOutput(formatAsColorsObject(result, nameFormat), argv.pretty, argv.export);
}
